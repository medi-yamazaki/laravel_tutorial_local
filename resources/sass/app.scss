// Fonts
@import url('https://fonts.googleapis.com/css?family=Nunito');

// Variables
@import 'variables';

// Bootstrap
@import '~bootstrap/scss/bootstrap';
$baseColor: #636b6f;
$baseCCC: #ccc;
$baseGray: #e9ecef;
$baseBlue: #2176bd;
$baseGreen: #22d4b0;
$baseRed: #dc3545;

* {
    box-sizing: border-box;
}
html, body {
    background-color: #fff;
    color: #636b6f;
    font-family: 'Nunito', sans-serif;
    font-weight: 200;
    font-size: 1.4rem;
    height: 100vh;
    word-break: break-all;
    margin: 0;
}
html {
    font-size: 62.5%;
}
ol, ul, li {
	list-style: none;
}

a {
    color: $baseBlue;
    &:hover {
        color: $baseRed;
    }
}

.full-height {
    height: 100vh;
}

.flex-center {
    align-items: center;
    display: flex;
    justify-content: center;
}

.position-ref {
    position: relative;
}

.top-right {
    position: absolute;
    right: 10px;
    top: 18px;
}

.content {
    text-align: center;
}

.title {
    font-size: 84px;
    margin-bottom: 30px;
    text-align: center;
}

.links > a {
    color: #636b6f;
    padding: 0 25px;
    font-size: 13px;
    font-weight: 600;
    letter-spacing: .1rem;
    text-decoration: none;
    text-transform: uppercase;
}

.todoMain {
    display: block;
    margin: 0 auto;
    padding: 0 0 40px;
    width: 100%;
    max-width: 500px;
}
.LoginMain {
    margin: 0 auto;
    padding: 30px 0 40px;
    width: 100%;
}

@mixin borderSet($type: all,$width: 1px,$style: solid,$color: $baseGray) {
    @if $type == all {
        border: $width $style $color;
    } @else {
        border-#{$type}: $width $style $color;
    }
}

@mixin flexSet($width: 100%,$justify: flex-start,$alignC: flex-start,$flow: row wrap,$alignI: flex-start) {
    width: $width;
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: $justify;
    justify-content: $justify;
    -webkit-align-content: $alignC;
    align-content: $alignC;
    -webkit-flex-flow: $flow;
    flex-flow: $flow;
    -webkit-align-items: $alignI;
    align-items: $alignI;
}

.form-control {
    padding: 10px;
    height: auto;
    font-size: 1.4rem;
}

.todoForm,.todoContent {
    $contentMB: 40px;
    .emptyTxt {
        width: 100%;
        margin: 0 auto $contentMB;
        text-align: center;
    }
    .todoList {
        display: inline-block;
        margin: 0 auto $contentMB;
        padding: 0;
        position: relative;
        width: 100%;
        text-align: left;
        overflow: hidden;
        border-radius: 3px;
        @include borderSet;

        li {
            $liPaddingArg: 20px;
            @include flexSet;
            position: relative;
            padding: 10px $liPaddingArg;
            &:not(:last-of-type)::after {
                content: "";
                position: absolute;
                left: 0;
                right: 0;
                bottom: 0;
                z-index: 1;
                @include borderSet($type: bottom);
            }
            &.new {
                &::before {
                    content: "";
                    position: absolute;
                    left: 0;
                    top: 0;
                    bottom: 0;
                    z-index: 0;
                    @include borderSet($type: left,$width: 5px,$color: $baseBlue);
                }
                dl dd {
                    color: $baseBlue;
                    .editLink a {
                        color: $baseGreen;
                    }
                }
            }
            &.doing {
                &::before {
                    content: "";
                    position: absolute;
                    left: 0;
                    top: 0;
                    bottom: 0;
                    z-index: 0;
                    @include borderSet($type: left,$width: 5px,$color: $baseRed);
                }
                dl dd {
                    color: $baseRed;
                    .editLink a {
                        color: $baseGreen;
                    }
                }
            }
            &.done {
                background: lighten($baseGray, 5%);
                color: $baseCCC;
                &::before {
                    content: "";
                    position: absolute;
                    left: 0;
                    top: 0;
                    bottom: 0;
                    z-index: 0;
                    @include borderSet($type: left,$width: 5px);
                }

                a {
                    color: darken($baseGray, 15%);
                }
            }

            dl {
                @include flexSet($flow: row nowrap);
                position: relative;
                margin: 0 0 5px;
                padding: 0;

                $statusW: 100px;
                dt {
                    width: calc(100% - #{$statusW});
                    padding: 0 $liPaddingArg 0 0;
                    a {
                        display: inline-block;
                        width: 100%;
                        color: $baseColor;
                    }

                }
                dd {
                    @include flexSet($width: $statusW,$flow: row nowrap);
                    position: relative;
                    margin: 0 0 0px;
                    padding: 0;

                    .status {
                        width: 50%;
                        padding: 0 10px 0 0;
                        font-size: 1.2rem;
                        text-align: center;
                    }
                    .editLink {
                        width: 50%;
                        font-size: 1.2rem;
                        text-align: center;
                    }
                }
            }
        }
    }
    .detailList {
        @include flexSet($justify: flex-end,$flow: row nowrap);
        .name,.upDate {
            font-weight: normal;
            font-size: 0.8rem;
            display: inline-block;
            width: auto;
            text-align: right;
            color: darken($baseGray, 15%);
        }

        span:not(:only-of-type):not(:last-of-type) {
            margin-right: 10px;
        }
    }
    .btnList {
        @include flexSet($justify: center,$flow: row nowrap);
        position: relative;
        padding: 0 10px;

        li {
            width: auto;
            min-width: 100px;
            &:not(:last-of-type) {
                margin-right: 10px;
            }
            .btn-light {
                background: $baseGray;
            }
        }
    }

    .form-check-input {
        width: 14px;
        height: 14px;
        top: 50%;
        left: 0;
        margin-top: -7px;
        margin-left: 0;
    }
    .form-check-label {
        line-height: 1.3;
    }

    .btn {
        font-size: 1.4rem;
        min-width: 100px;
    }

    .formDl,.detailDl {
        margin-bottom: $contentMB;
        dt:not(:last-of-type) {
            margin-bottom: 5px;
        }

        dd:not(:last-of-type) {
            margin-bottom: 20px;
        }
        dd:last-of-type {
            margin-bottom: 0px;
        }
    }

    .form-text {
        margin-top: 5px;
        &.textError {
            color: #f00;
        }
    }


    .statusEdit,.statusDetail {
        @include flexSet($flow: row nowrap);
        position: relative;
        margin-bottom: $contentMB;

        dl {
            @include flexSet($flow: row nowrap);
            margin: 0;
            padding: 0;
            position: relative;

            $editStatusW: 120px;
            dt {
                width: $editStatusW;
            }
            dd {
                @include flexSet($width: calc(100% - #{$editStatusW}),$flow: row nowrap);
                margin: 0;
                padding: 0;

                $selectWidth: 100px;
                .selectStatus {
                    width: $selectWidth;

                    &.new {
                        color: $baseBlue;
                    }
                    &.doing {
                        color: $baseRed;
                    }
                    &.done {
                        color: $baseCCC;
                    }
                }

                .dateStatus {
                    width: calc(100% - #{$selectWidth});
                    li {
                        width: 100%;
                        font-size: 1.2rem;
                    }
                }
            }
        }
    }
}

.searchForm {
    ul {
        padding: 0;
        margin: 0 0 20px;
        @include flexSet ($alignI: stretch);
        $serachBtnW: 80px;
        
        &.searchDesc li:first-of-type {
            width: calc((100% - 20px) - #{$serachBtnW} * 2);
        }
        &:not(.searchDesc) li:first-of-type {
            width: calc((100% - 10px) - #{$serachBtnW});
        }
        
        li:first-of-type {
            margin: 0 10px 0 0;
        }
        &.searchDesc li:nth-of-type(2) {
            width: $serachBtnW;
            margin: 0 10px 0 0;
        }
        li:last-of-type {
            margin: 0;
            width: $serachBtnW;

        }
        .btn {
            width: 100%;
            height: 100%;
            font-size: 1.4rem;
        }
        .btn-light {
            @include flexSet ($justify: center,$alignC: center,$alignI: center);
        }
    }
}

.paginationContainer {
    padding: 0;
    margin: 0 auto 10px;
    @include flexSet ($justify: center,$alignI: stretch);
}
